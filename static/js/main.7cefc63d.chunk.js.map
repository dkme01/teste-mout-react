{"version":3,"sources":["hooks/ColorSchemeContext/styles.ts","hooks/ColorSchemeContext/index.tsx","components/CustomAppBar/index.tsx","components/CustomContainer/index.tsx","containers/Layout/index.tsx","components/CustomCard/styles.ts","components/CustomCard/index.tsx","services/api.ts","services/countries.ts","components/CustomDialog/styles.ts","components/CustomDialog/index.tsx","components/CustomPagination/styles.ts","components/CustomPagination/index.tsx","components/CustomSearchBar/styles.ts","components/CustomSearchBar/index.tsx","pages/Countries/styles.ts","pages/Countries/utils.ts","pages/Countries/index.tsx","routes/index.tsx","pages/Main/index.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","root","display","toolbar","title","flexGrow","textAlign","fontWeight","content","height","overflow","container","paddingTop","spacing","paddingBottom","paper","alignItems","justifyContent","padding","flexDirection","ColorSchemeContext","createContext","ColorSchemeProvider","children","useState","darkState","setDarkState","mainPrimaryColor","mainSecondaryColor","customClasses","darkTheme","createMuiTheme","palette","type","primary","main","secondary","Provider","value","handleThemeChange","ThemeProvider","useColorSchemeContext","context","useContext","Error","CustomAppBar","AppBar","position","className","clsx","appBar","Toolbar","Typography","component","variant","color","noWrap","on","onIcon","Brightness3","offIcon","Brightness7","Switch","checked","onChange","CustomContainer","Container","maxWidth","Grid","direction","justify","Paper","Layout","useCardStyles","card","minHeight","margin","border","CustomCard","flag","name","alpha3Code","onClick","cardStyle","item","xs","md","lg","Card","e","preventDefault","CardActionArea","CardMedia","alt","image","CardContent","gutterBottom","CardActions","Button","size","api","axios","create","baseURL","process","headers","a","get","countryResponse","console","error","getCountry","search","useDialogStyles","createStyles","marginLeft","flex","contentPaper","countryGrid","marginTop","countryInfoTitle","marginBottom","countryFlagTitle","bordersInline","borderButton","previousButton","CustomDialog","countrySelected","open","handleClose","loading","setLoading","countryDetails","setCountryDetails","countryPrefix","countryInfo","response","data","useEffect","Dialog","fullScreen","onClose","IconButton","edge","Close","CircularProgress","src","width","capital","population","toLocaleString","region","subregion","currencies","map","currencie","code","languages","language","regionalBlocs","regionalBloc","acronym","demonym","borders","length","getCountryInfo","usePaginationStyles","paginationUl","flexWrap","CustomPagination","dataSize","pageLimit","currentPage","onPageChange","Math","round","pages","Pagination","count","page","_","boundaryCount","showFirstButton","showLastButton","classes","ul","useSearchBarStyles","iconButton","formControl","minWidth","CustomSearchBar","filterOptions","dataOptions","handleSearch","filter","setFilter","selectedOption","setSelectedOption","dataOptionsToSelection","setDataOptionsToSelecion","onSearch","Name","Region","elevation","Autocomplete","getOptionLabel","option","options","placeholder","fullWidth","renderInput","props","TextField","label","onKeyPress","event","key","toUpperCase","handleSearchTextChange","aria-label","Search","FormControl","InputLabel","id","Select","labelId","String","target","MenuItem","Value","Key","useCountriesStyles","gridWidth","RegionSearch","Countries","countries","setCountries","countriesOnDisplay","setCountriesOnDisplay","setCurrentPage","setCountrySelected","getAllCountries","then","undefined","lastItemIndex","firstItemIndex","slice","country","filterOption","searchText","countriesToDisplay","toLowerCase","includes","index","handleSelectCountry","Routes","exact","path","render","to","Main","App","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.7cefc63d.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {},\n  title: {\n    flexGrow: 1,\n    textAlign: \"center\",\n    fontWeight: 600,\n  },\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(12),\n    paddingBottom: theme.spacing(12),\n  },\n  paper: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n}));\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport { createContext, useContext, useState } from \"react\";\nimport { useStyles } from \"./styles\";\n\ninterface ColorSchemeContextData {\n  darkState: boolean;\n  handleThemeChange: () => void;\n  customClasses: any;\n}\n\nconst ColorSchemeContext = createContext<ColorSchemeContextData>(\n  {} as ColorSchemeContextData\n);\n\nfunction ColorSchemeProvider({ children }: any) {\n  const [darkState, setDarkState] = useState(true);\n  const mainPrimaryColor = darkState ? \"#ff9800\" : \"#03a9f4\";\n  const mainSecondaryColor = darkState ? \"##bf360c\" : \"#673ab7\";\n  const customClasses = useStyles();\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: darkState ? \"dark\" : \"light\",\n      primary: {\n        main: mainPrimaryColor,\n      },\n      secondary: {\n        main: mainSecondaryColor,\n      },\n    },\n  });\n\n  function handleThemeChange() {\n    setDarkState(!darkState);\n  }\n\n  return (\n    <ColorSchemeContext.Provider\n      value={{\n        darkState,\n        customClasses,\n        handleThemeChange,\n      }}\n    >\n      <ThemeProvider theme={darkTheme}>{children}</ThemeProvider>\n    </ColorSchemeContext.Provider>\n  );\n}\n\nfunction useColorSchemeContext(): ColorSchemeContextData {\n  const context = useContext(ColorSchemeContext);\n\n  if (!context) {\n    throw new Error(\n      \"useColorSchemeContext must be used within an ColorSchemeProvider\"\n    );\n  }\n  return context;\n}\n\nfunction withColorSchemeContext(Component: any) {\n  return function componentBoundWithAppContext(props: any): JSX.Element {\n    return (\n      <ColorSchemeContext.Consumer>\n        {(appContext) => <Component {...props} appContext={appContext} />}\n      </ColorSchemeContext.Consumer>\n    );\n  };\n}\n\nexport {\n  ColorSchemeContext,\n  useColorSchemeContext,\n  withColorSchemeContext,\n  ColorSchemeProvider,\n};\n","import { AppBar, Switch, Toolbar, Typography } from \"@material-ui/core\";\nimport { Brightness3, Brightness7 } from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport ToggleIcon from \"material-ui-toggle-icon\";\nimport { useColorSchemeContext } from \"../../hooks/ColorSchemeContext\";\n\nexport function CustomAppBar() {\n  const {\n    customClasses,\n    darkState,\n    handleThemeChange,\n  } = useColorSchemeContext();\n  return (\n    <AppBar position=\"absolute\" className={clsx(customClasses.appBar)}>\n      <Toolbar className={customClasses.toolbar}>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={customClasses.title}\n        >\n          World Countries\n        </Typography>\n        <ToggleIcon\n          on={darkState}\n          onIcon={<Brightness3 />}\n          offIcon={<Brightness7 />}\n        />\n        <Switch checked={darkState} onChange={handleThemeChange} />\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import { Container, Grid, Paper } from \"@material-ui/core\";\nimport { useColorSchemeContext } from \"../../hooks/ColorSchemeContext\";\n\nexport function CustomContainer({ children }: any) {\n  const { customClasses } = useColorSchemeContext();\n\n  return (\n    <main className={customClasses.content}>\n      <Container maxWidth=\"lg\" className={customClasses.container}>\n        <Grid container spacing={2} direction=\"row\" justify=\"center\">\n          <Paper className={customClasses.paper}>{children}</Paper>\n        </Grid>\n      </Container>\n    </main>\n  );\n}\n","import { CustomAppBar } from \"../../components/CustomAppBar\";\nimport { CustomContainer } from \"../../components/CustomContainer\";\nimport { useColorSchemeContext } from \"../../hooks/ColorSchemeContext\";\n\nexport function Layout({ children }: any) {\n  const { customClasses } = useColorSchemeContext();\n  return (\n    <div className={customClasses.root}>\n      <CustomAppBar />\n      <CustomContainer>{children}</CustomContainer>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useCardStyles = makeStyles((theme) => ({\n  card: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    minHeight: 295,\n    margin: \"0 auto\",\n    border: \"1px solid #000\",\n  },\n}));\n","import {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { useCardStyles } from \"./styles\";\n\nexport interface CardProps {\n  flag: string;\n  name: string;\n  alpha3Code: string;\n  onClick: () => void;\n}\n\nexport function CustomCard({ flag, name, alpha3Code, onClick }: CardProps) {\n  const cardStyle = useCardStyles();\n\n  return (\n    <Grid item xs={12} md={3} lg={3}>\n      <Card\n        className={cardStyle.card}\n        onClick={(e) => {\n          e.preventDefault();\n          onClick();\n        }}\n      >\n        <CardActionArea\n          onClick={(e) => {\n            e.preventDefault();\n            onClick();\n          }}\n        >\n          <CardMedia\n            component=\"img\"\n            alt={`${name}'s flag`}\n            height=\"140\"\n            image={flag}\n            title={name}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {`${name} - ${alpha3Code}`}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button\n            onClick={(e) => {\n              e.preventDefault();\n              onClick();\n            }}\n            size=\"small\"\n            color=\"primary\"\n          >\n            Detalhes\n          </Button>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n}\n","import axios from \"axios\";\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst api = axios.create({\r\n  baseURL: apiUrl,\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n","import { AxiosResponse } from \"axios\";\r\nimport api from \"./api\";\r\n\r\nexport interface CountryInfo {\r\n  name: string;\r\n  topLevelDomain: Array<string>;\r\n  alpha2Code: string;\r\n  alpha3Code: string;\r\n  callingCodes: Array<string>;\r\n  capital: string;\r\n  altSpellings: Array<string>;\r\n  region: string;\r\n  subregion: string;\r\n  population: number;\r\n  latlng: Array<number>;\r\n  demonym: string;\r\n  area: number;\r\n  gini: number;\r\n  timezones: Array<string>;\r\n  borders: Array<string>;\r\n  nativeName: string;\r\n  numericCode: string;\r\n  currencies: Array<CountryCurrencie>;\r\n  languages: Array<CountryLanguage>;\r\n  translations: any;\r\n  flag: string;\r\n  regionalBlocs: Array<CountryRegionalBloc>;\r\n  cioc: string;\r\n}\r\n\r\nexport interface CountryLanguage {\r\n  iso639_1: string;\r\n  iso639_2: string;\r\n  name: string;\r\n  nativeName: string;\r\n}\r\n\r\nexport interface CountryCurrencie {\r\n  code: string;\r\n  name: string;\r\n  symbol: string;\r\n}\r\n\r\nexport interface CountryRegionalBloc {\r\n  acronym: string;\r\n  name: string;\r\n}\r\n\r\nexport async function getAllCountries() {\r\n  let countryResponse: AxiosResponse<Array<CountryInfo>>;\r\n  try {\r\n    countryResponse = await api.get<any, AxiosResponse<Array<CountryInfo>>>(\"all\");\r\n    return countryResponse;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport async function getCountry(search: string) {\r\n  let countryResponse: AxiosResponse<CountryInfo> | null = null;\r\n  try {\r\n    countryResponse = await api.get<any, AxiosResponse<CountryInfo>>(`alpha/${search}`);\r\n    return countryResponse;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n","import { createStyles, makeStyles } from \"@material-ui/core\";\n\nexport const useDialogStyles = makeStyles((theme) =>\n  createStyles({\n    appBar: {\n      position: \"relative\",\n    },\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1,\n    },\n    contentPaper: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      margin: 8,\n    },\n    countryGrid: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      marginTop: \"2rem\",\n    },\n    countryInfoTitle: {\n      fontWeight: \"bold\",\n      marginBottom: \"0.25rem\",\n    },\n    countryFlagTitle: {\n      fontWeight: \"bold\",\n      margin: \"1.5rem 0\",\n    },\n    bordersInline: {\n      display: \"flex\",\n      flexDirection: \"row\",\n    },\n    borderButton: {\n      margin: 8,\n    },\n    previousButton: {\n      margin: \"16px 0\",\n    },\n  })\n);\n","import {\n  Button,\n  CircularProgress,\n  Grid,\n  Paper,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Close } from \"@material-ui/icons\";\nimport { useEffect, useState } from \"react\";\nimport { CountryInfo, getCountry } from \"../../services/countries\";\nimport { useDialogStyles } from \"./styles\";\n\ninterface CustomDialogProps {\n  open: boolean;\n  countrySelected: CountryInfo | null;\n  handleClose: () => void;\n}\n\nexport function CustomDialog({\n  countrySelected,\n  open,\n  handleClose,\n}: CustomDialogProps) {\n  const customClasses = useDialogStyles();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [countryDetails, setCountryDetails] = useState<CountryInfo | null>(\n    null\n  );\n\n  useEffect(() => {\n    setCountryDetails(countrySelected);\n    setLoading(false);\n  }, [countrySelected]);\n\n  async function getCountryInfo(countryPrefix: string) {\n    let countryInfo: CountryInfo | null = null;\n    const response = await getCountry(countryPrefix);\n\n    if (response?.data) {\n      countryInfo = response.data;\n    }\n\n    setCountryDetails(countryInfo);\n    setLoading(false);\n  }\n\n  return (\n    <Dialog fullScreen open={open} onClose={handleClose}>\n      <AppBar className={customClasses.appBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose}>\n            <Close />\n          </IconButton>\n          <Typography variant=\"h6\" className={customClasses.title}>\n            {countryDetails?.name}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Paper className={customClasses.contentPaper}>\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <Grid container direction=\"row\">\n            <Grid\n              item\n              lg={12}\n              md={12}\n              xs={12}\n              className={customClasses.countryGrid}\n            >\n              <Typography\n                variant=\"h3\"\n                className={customClasses.countryFlagTitle}\n              >\n                {`${countryDetails?.name} - ${countryDetails?.alpha3Code}`}\n              </Typography>\n              <img\n                src={countryDetails?.flag}\n                alt={`${countryDetails?.name}'s flag`}\n                width=\"300\"\n                height=\"200\"\n              />\n            </Grid>\n            <Grid\n              item\n              lg={3}\n              md={4}\n              xs={6}\n              className={customClasses.countryGrid}\n            >\n              <Typography\n                variant=\"h6\"\n                className={customClasses.countryInfoTitle}\n              >\n                Capital\n              </Typography>\n              <Typography variant=\"body1\">{countryDetails?.capital}</Typography>\n            </Grid>\n            <Grid\n              item\n              lg={3}\n              md={4}\n              xs={6}\n              className={customClasses.countryGrid}\n            >\n              <Typography\n                variant=\"h6\"\n                className={customClasses.countryInfoTitle}\n              >\n                População\n              </Typography>\n              <Typography variant=\"body1\">\n                {countryDetails?.population.toLocaleString(\"pt-BR\")}\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              lg={3}\n              md={4}\n              xs={6}\n              className={customClasses.countryGrid}\n            >\n              <Typography\n                variant=\"h6\"\n                className={customClasses.countryInfoTitle}\n              >\n                Região\n              </Typography>\n              <Typography variant=\"body1\">{countryDetails?.region}</Typography>\n            </Grid>\n            <Grid\n              item\n              lg={3}\n              md={4}\n              xs={6}\n              className={customClasses.countryGrid}\n            >\n              <Typography\n                variant=\"h6\"\n                className={customClasses.countryInfoTitle}\n              >\n                Sub-Região\n              </Typography>\n              <Typography variant=\"body1\">\n                {countryDetails?.subregion}\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              lg={3}\n              md={4}\n              xs={6}\n              className={customClasses.countryGrid}\n            >\n              <Typography\n                variant=\"h6\"\n                className={customClasses.countryInfoTitle}\n              >\n                Moeda(s)\n              </Typography>\n              {countryDetails?.currencies.map((currencie) => (\n                <Typography key={currencie.code} variant=\"body1\">\n                  {currencie.name}\n                </Typography>\n              ))}\n            </Grid>\n            <Grid\n              item\n              lg={3}\n              md={4}\n              xs={6}\n              className={customClasses.countryGrid}\n            >\n              <Typography\n                variant=\"h6\"\n                className={customClasses.countryInfoTitle}\n              >\n                Idioma(s)\n              </Typography>\n              {countryDetails?.languages.map((language) => (\n                <Typography key={language.name} variant=\"body1\">\n                  {language.name}\n                </Typography>\n              ))}\n            </Grid>\n            <Grid\n              item\n              lg={3}\n              md={4}\n              xs={6}\n              className={customClasses.countryGrid}\n            >\n              <Typography\n                variant=\"h6\"\n                className={customClasses.countryInfoTitle}\n              >\n                Blocos Regionais\n              </Typography>\n              {countryDetails?.regionalBlocs.map((regionalBloc) => (\n                <Typography key={regionalBloc.name} variant=\"body1\">\n                  {`${regionalBloc.name} - ${regionalBloc.acronym}`}\n                </Typography>\n              ))}\n            </Grid>\n            <Grid\n              item\n              lg={3}\n              md={4}\n              xs={6}\n              className={customClasses.countryGrid}\n            >\n              <Typography\n                variant=\"h6\"\n                className={customClasses.countryInfoTitle}\n              >\n                Denominação\n              </Typography>\n              <Typography variant=\"body1\">{countryDetails?.demonym}</Typography>\n            </Grid>\n            <Grid\n              item\n              lg={12}\n              md={12}\n              xs={12}\n              className={customClasses.countryGrid}\n            >\n              {countryDetails && countryDetails.borders.length > 0 && (\n                <>\n                  <Typography\n                    variant=\"h6\"\n                    className={customClasses.countryInfoTitle}\n                  >\n                    Fronteira(s)\n                  </Typography>\n                  <span className={customClasses.bordersInline}>\n                    {countryDetails?.borders.map((border) => (\n                      <Button\n                        variant=\"outlined\"\n                        key={border}\n                        className={customClasses.borderButton}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          getCountryInfo(border);\n                          setLoading(true);\n                        }}\n                      >\n                        {border}\n                      </Button>\n                    ))}\n                  </span>\n                </>\n              )}\n            </Grid>\n          </Grid>\n        )}\n      </Paper>\n    </Dialog>\n  );\n}\n","import { createStyles, makeStyles } from \"@material-ui/core\";\n\nexport const usePaginationStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      marginTop: \"1vh\",\n    },\n    paginationUl: {\n      flexWrap: \"nowrap\",\n    },\n  })\n);\n","import { Pagination } from \"@material-ui/lab\";\nimport { useState } from \"react\";\nimport { usePaginationStyles } from \"./styles\";\n\ninterface CustomPaginationProps {\n  dataSize: number;\n  pageLimit: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport function CustomPagination({\n  dataSize,\n  pageLimit,\n  currentPage,\n  onPageChange,\n}: CustomPaginationProps) {\n  const [pages] = useState<number>(Math.round(dataSize / pageLimit));\n  const customClasses = usePaginationStyles();\n\n  return (\n    <Pagination\n      className={customClasses.root}\n      count={pages}\n      page={currentPage}\n      onChange={(_, value) => onPageChange(value)}\n      boundaryCount={1}\n      showFirstButton\n      showLastButton\n      classes={{ ul: customClasses.paginationUl }}\n    />\n  );\n}\n","import { createStyles, makeStyles } from \"@material-ui/core\";\n\nexport const useSearchBarStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      alignItems: \"center\",\n      margin: \"0 auto\",\n    },\n    iconButton: {\n      padding: 10,\n      margin: \"0 10px\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      maxWidth: 300,\n    },\n  })\n);\n","import {\n  FormControl,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchBarStyles } from \"./styles\";\n\ninterface CustomSearchBarProps {\n  filterOptions: Array<{ Key: string; Value: string }>;\n  dataOptions: Array<{ Name: string; Region: string }>;\n  handleSearch: (filterOption: string, textSearch?: string) => void;\n}\n\nexport function CustomSearchBar({\n  filterOptions,\n  dataOptions,\n  handleSearch,\n}: CustomSearchBarProps) {\n  const customClasses = useSearchBarStyles();\n  const [filter, setFilter] = useState<string>(\"\");\n  const [selectedOption, setSelectedOption] = useState<{\n    Name: string;\n    Region: string;\n  } | null>(null);\n  const [dataOptionsToSelection, setDataOptionsToSelecion] = useState(\n    dataOptions\n  );\n\n  function handleFilterChange(value: string) {\n    setFilter(value);\n  }\n\n  function handleSearchTextChange(\n    value: { Name: string; Region: string } | null\n  ) {\n    setSelectedOption(value);\n  }\n\n  useEffect(() => {\n    if (filter !== \"\") {\n      setDataOptionsToSelecion(\n        dataOptions.filter((data) => data.Region === filter)\n      );\n    } else {\n      setDataOptionsToSelecion(dataOptions);\n    }\n  }, [filter]);\n\n  function onSearch() {\n    handleSearch(filter, selectedOption?.Name);\n  }\n\n  return (\n    <Paper component=\"form\" elevation={0} className={customClasses.root}>\n      <Autocomplete\n        getOptionLabel={(option) => option.Name}\n        options={dataOptionsToSelection}\n        placeholder=\"Buscar países\"\n        fullWidth\n        value={selectedOption}\n        renderInput={(props) => (\n          <TextField\n            {...props}\n            variant=\"outlined\"\n            label=\"Escolha um país\"\n            fullWidth\n          />\n        )}\n        onKeyPress={(event) => {\n          if (event.key.toUpperCase() === \"ENTER\") {\n            event.preventDefault();\n            onSearch();\n          }\n        }}\n        onChange={(_, value) => handleSearchTextChange(value)}\n      />\n      <IconButton\n        type=\"submit\"\n        className={customClasses.iconButton}\n        aria-label=\"search\"\n        onClick={(e) => {\n          e.preventDefault();\n          onSearch();\n        }}\n      >\n        <Search />\n      </IconButton>\n      <FormControl\n        className={customClasses.formControl}\n        variant=\"outlined\"\n        fullWidth\n      >\n        <InputLabel id=\"region-select\">Região</InputLabel>\n        <Select\n          labelId=\"region-select\"\n          value={filter}\n          onChange={(event) => handleFilterChange(String(event.target.value))}\n          label=\"Região\"\n        >\n          <MenuItem value=\"\">Todas</MenuItem>\n          {filterOptions.map((filter) => (\n            <MenuItem key={filter.Key} value={filter.Value}>\n              {filter.Value}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Paper>\n  );\n}\n","import { createStyles, makeStyles } from \"@material-ui/core\";\n\nexport const useCountriesStyles = makeStyles((theme) =>\n  createStyles({\n    gridWidth: {\n      width: \"100vw\",\n    },\n  })\n);\n","export const RegionSearch = [\n  { Key: \"Africa\", Value: \"Africa\" },\n  { Key: \"Americas\", Value: \"Americas\" },\n  { Key: \"Asia\", Value: \"Asia\" },\n  { Key: \"Europe\", Value: \"Europe\" },\n  { Key: \"Oceania\", Value: \"Oceania\" },\n];\n","import { CircularProgress, Grid } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { CustomCard } from \"../../components/CustomCard\";\nimport { CustomDialog } from \"../../components/CustomDialog\";\nimport { CustomPagination } from \"../../components/CustomPagination\";\nimport { CustomSearchBar } from \"../../components/CustomSearchBar\";\nimport { CountryInfo, getAllCountries } from \"../../services/countries\";\nimport { useCountriesStyles } from \"./styles\";\nimport { RegionSearch } from \"./utils\";\n\nconst itemsPerPage = 12;\n\nexport function Countries() {\n  const customClasses = useCountriesStyles();\n  const [countries, setCountries] = useState<Array<CountryInfo>>([]);\n  const [countriesOnDisplay, setCountriesOnDisplay] = useState<\n    Array<CountryInfo>\n  >([]);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [countrySelected, setCountrySelected] =\n    useState<CountryInfo | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    getAllCountries().then((response) => {\n      if (response?.data !== undefined) {\n        setCountries(response.data);\n      }\n    });\n  }, []);\n\n  function onPageChange(page: number) {\n    setCurrentPage(page);\n  }\n\n  useEffect(() => {\n    const lastItemIndex = currentPage * itemsPerPage;\n    const firstItemIndex = lastItemIndex - itemsPerPage;\n    setCountriesOnDisplay(countries.slice(firstItemIndex, lastItemIndex));\n    if (loading) {\n      setLoading(false);\n    }\n  }, [countries, currentPage]);\n\n  function handleSearch(filterOption: string, searchText?: string) {\n    let countriesToDisplay: Array<CountryInfo> = [];\n    if (searchText && filterOption !== \"\") {\n      countriesToDisplay = countries.filter(\n        (country) =>\n          country.name.toLowerCase().includes(searchText.toLowerCase()) &&\n          country.region === filterOption\n      );\n    }\n\n    if (filterOption !== \"\") {\n      countriesToDisplay = countries.filter(\n        (country) => country.region === filterOption\n      );\n    }\n\n    if (searchText) {\n      countriesToDisplay = countries.filter((country) =>\n        country.name.toLowerCase().includes(searchText.toLowerCase())\n      );\n    }\n\n    setLoading(false);\n    setCountriesOnDisplay(\n      countriesToDisplay.length > 0\n        ? countriesToDisplay\n        : countries.slice(0, itemsPerPage)\n    );\n  }\n\n  function handleSelectCountry(country: CountryInfo) {\n    setCountrySelected(country);\n  }\n\n  function handleCloseModal() {\n    setCountrySelected(null);\n  }\n\n  return (\n    <>\n      {countriesOnDisplay.length > 0 && (\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          <Grid\n            item\n            xs={12}\n            md={12}\n            lg={12}\n            classes={{ root: customClasses.gridWidth }}\n          >\n            <CustomSearchBar\n              dataOptions={countries.map((country) => {\n                return {\n                  Name: country.name,\n                  Region: country.region,\n                };\n              })}\n              filterOptions={RegionSearch}\n              handleSearch={handleSearch}\n            />\n          </Grid>\n          {loading ? (\n            <CircularProgress />\n          ) : (\n            <>\n              {countriesOnDisplay.map((country, index) => (\n                <CustomCard\n                  key={`${country.name}_${index}`}\n                  flag={country.flag}\n                  alpha3Code={country.alpha3Code}\n                  name={country.name}\n                  onClick={() => handleSelectCountry(country)}\n                />\n              ))}\n              {countriesOnDisplay.length > 1 && (\n                <Grid item xs={12}>\n                  <CustomPagination\n                    dataSize={\n                      countriesOnDisplay.length > 1 ? countries.length : 0\n                    }\n                    onPageChange={onPageChange}\n                    currentPage={currentPage}\n                    pageLimit={itemsPerPage}\n                  />\n                </Grid>\n              )}\n            </>\n          )}\n        </Grid>\n      )}\n      {countrySelected && (\n        <CustomDialog\n          open={countrySelected !== null}\n          handleClose={handleCloseModal}\n          countrySelected={countrySelected}\n        />\n      )}\n    </>\n  );\n}\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { Countries } from \"../pages/Countries\";\n\nexport function Routes() {\n  return (\n    <Router>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => <Redirect to=\"/teste-mout-react\" />}\n        />\n        <Route exact path=\"/teste-mout-react\" render={() => <Countries />} />\n        <Route path=\"*\" render={() => <Redirect to=\"/teste-mout-react\" />} />\n      </Switch>\n    </Router>\n  );\n}\n","import { Layout } from \"../../containers/Layout\";\nimport { Routes } from \"../../routes\";\n\nexport function Main() {\n  return (\n    <Layout>\n      <Routes />\n    </Layout>\n  );\n}\n","import { CssBaseline } from \"@material-ui/core\";\nimport { ColorSchemeProvider } from \"./hooks/ColorSchemeContext\";\nimport { Main } from \"./pages/Main\";\n\nexport function App() {\n  return (\n    <ColorSchemeProvider>\n      <CssBaseline />\n      <Main />\n    </ColorSchemeProvider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { render } from \"react-dom\";\nimport { App } from \"./App\";\n\nrender(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}